import React, { useEffect, useState } from "react";
import ReactECharts from "echarts-for-react";
import * as echarts from "echarts";

const ChartComponent = ({
  grid,
  titles,
  xAxis,
  yAxis,
  series,
  fontSize,
  color,
}) => {
  // const options = {
  //   backgroundColor: {
  //     type: "solid",
  //     colorStops: [
  //       {
  //         offset: 1,
  //         color: "#F0F0F0",
  //       },
  //     ],
  //   },
  //   tooltip: {
  //     trigger: "axis",
  //     axisPointer: {
  //       type: "shadow",
  //     },
  //   },
  //   legend: {},
  //   grid: {
  //     left: "3%",
  //     right: "4%",
  //     bottom: "3%",
  //     containLabel: true,
  //   },
  //   xAxis: {
  //     type: "value",
  //   },
  //   yAxis: {
  //     type: "category",
  //     data: [
  //       "100",
  //       "99",
  //       "98",
  //       "97",
  //       "96",
  //       "95",
  //       "94",
  //       "93",
  //       "92",
  //       "91",
  //       "90",
  //       "89",
  //       "88",
  //       "87",
  //       "86",
  //       "85",
  //       "84",
  //       "83",
  //       "82",
  //       "81",
  //       "80",
  //       "79",
  //       "78",
  //       "77",
  //       "76",
  //       "75",
  //       "74",
  //       "73",
  //       "72",
  //       "71",
  //       "70",
  //       "69",
  //       "68",
  //       "67",
  //       "66",
  //       "65",
  //       "64",
  //       "63",
  //       "62",
  //       "61",
  //       "60",
  //       "59",
  //       "58",
  //       "57",
  //       "56",
  //       "55",
  //       "54",
  //       "53",
  //       "52",
  //       "51",
  //       "50",
  //       "49",
  //       "48",
  //       "47",
  //       "46",
  //       "45",
  //       "44",
  //       "43",
  //       "42",
  //       "41",
  //       "40",
  //       "39",
  //       "38",
  //       "37",
  //       "36",
  //       "35",
  //       "34",
  //       "33",
  //       "32",
  //       "31",
  //       "30",
  //       "29",
  //       "28",
  //       "27",
  //       "26",
  //       "25",
  //       "24",
  //       "23",
  //       "22",
  //       "21",
  //       "20",
  //       "19",
  //       "18",
  //       "17",
  //       "16",
  //       "15",
  //       "14",
  //       "13",
  //       "12",
  //       "11",
  //       "10",
  //       "9",
  //       "8",
  //       "7",
  //       "6",
  //       "5",
  //       "4",
  //       "3",
  //       "2",
  //       "1",
  //       "0",
  //     ],
  //   },
  //   series: [
  //     {
  //       name: "Age",
  //       type: "bar",
  //       color: "#195080",
  //       stack: "total",
  //       emphasis: {
  //         focus: "series",
  //       },
  //       data: [
  //         85, 75, 95, 15, 15, 15, 15, 15, 20, 65, 35, 30, 40, 45, 15, 15, 15,
  //         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
  //         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
  //         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
  //         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
  //         15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
  //       ],
  //     },
  //     {
  //       name: "Gender",
  //       type: "bar",
  //       color: "#FF5733",
  //       stack: "total",
  //       emphasis: {
  //         focus: "series",
  //       },
  //       data: [
  //         "100",
  //         "99",
  //         "98",
  //         "97",
  //         "96",
  //         "95",
  //         "94",
  //         "93",
  //         "92",
  //         "91",
  //         "90",
  //         "89",
  //         "88",
  //         "87",
  //         "86",
  //         "85",
  //         "84",
  //         "83",
  //         "82",
  //         "81",
  //         "80",
  //         "79",
  //         "78",
  //         "77",
  //         "76",
  //         "75",
  //         "74",
  //         "73",
  //         "72",
  //         "71",
  //         "70",
  //         "69",
  //         "68",
  //         "67",
  //         "66",
  //         "65",
  //         "64",
  //         "63",
  //         "62",
  //         "61",
  //         "60",
  //         "59",
  //         "58",
  //         "57",
  //         "56",
  //         "55",
  //         "54",
  //         "53",
  //         "52",
  //         "51",
  //         "50",
  //         "49",
  //         "48",
  //         "47",
  //         "46",
  //         "45",
  //         "44",
  //         "43",
  //         "42",
  //         "41",
  //         "40",
  //         "39",
  //         "38",
  //         "37",
  //         "36",
  //         "35",
  //         "34",
  //         "33",
  //         "32",
  //         "31",
  //         "30",
  //         "29",
  //         "28",
  //         "27",
  //         "26",
  //         "25",
  //         "24",
  //         "23",
  //         "22",
  //         "21",
  //         "20",
  //         "19",
  //         "18",
  //         "17",
  //         "16",
  //         "15",
  //         "14",
  //         "13",
  //         "12",
  //         "11",
  //         "10",
  //         "9",
  //         "8",
  //         "7",
  //         "6",
  //         "5",
  //         "4",
  //         "3",
  //         "2",
  //         "1",
  //         "0",
  //       ],
  //     },
  //     {
  //       name: "Height",
  //       type: "bar",
  //       color: "#33FF57",
  //       stack: "total",
  //       emphasis: {
  //         focus: "series",
  //       },
  //       data: [
  //         "100",
  //         "99",
  //         "98",
  //         "97",
  //         "96",
  //         "95",
  //         "94",
  //         "93",
  //         "92",
  //         "91",
  //         "90",
  //         "89",
  //         "88",
  //         "87",
  //         "86",
  //         "85",
  //         "84",
  //         "83",
  //         "82",
  //         "81",
  //         "80",
  //         "79",
  //         "78",
  //         "77",
  //         "76",
  //         "75",
  //         "74",
  //         "73",
  //         "72",
  //         "71",
  //         "70",
  //         "69",
  //         "68",
  //         "67",
  //         "66",
  //         "65",
  //         "64",
  //         "63",
  //         "62",
  //         "61",
  //         "60",
  //         "59",
  //         "58",
  //         "57",
  //         "56",
  //         "55",
  //         "54",
  //         "53",
  //         "52",
  //         "51",
  //         "50",
  //         "49",
  //         "48",
  //         "47",
  //         "46",
  //         "45",
  //         "44",
  //         "43",
  //         "42",
  //         "41",
  //         "40",
  //         "39",
  //         "38",
  //         "37",
  //         "36",
  //         "35",
  //         "34",
  //         "33",
  //         "32",
  //         "31",
  //         "30",
  //         "29",
  //         "28",
  //         "27",
  //         "26",
  //         "25",
  //         "24",
  //         "23",
  //         "22",
  //         "21",
  //         "20",
  //         "19",
  //         "18",
  //         "17",
  //         "16",
  //         "15",
  //         "14",
  //         "13",
  //         "12",
  //         "11",
  //         "10",
  //         "9",
  //         "8",
  //         "7",
  //         "6",
  //         "5",
  //         "4",
  //         "3",
  //         "2",
  //         "1",
  //         "0",
  //       ],
  //     },
  //   ],
  // };

  const [options, setOptions] = useState({
    title: titles ? titles : [],
    xAxis: xAxis
      ? xAxis.map((axis) => ({
          ...axis,
          axisLabel: {
            ...axis.axisLabel,
            fontSize: fontSize, // Set the font size for x-axis labels
          },
        }))
      : [],
    yAxis: yAxis
      ? yAxis.map((axis) => ({
          ...axis,
          axisLabel: {
            ...axis.axisLabel,
            fontSize: fontSize, // Set the font size for y-axis labels
          },
        }))
      : [],
    grid: grid ? grid : [],
    series: series ? series : [],
  });

  useEffect(() => {
    // Create a color map for each series based on the color prop
    const colorMap = {};

    // Populate the color map with series names and the selected color
    series.forEach((s) => {
      colorMap[s.name] = color;
    });

    // Dynamically update the color property for each series
    const updatedSeries = series.map((s) => ({
      ...s,
      itemStyle: {
        color: colorMap[s.name] || s.itemStyle?.color || color, // Use the selected color if available, otherwise use the existing color or the default color
      },
    }));

    setOptions({
      title: titles ? titles : [],
      xAxis: xAxis
        ? xAxis.map((axis) => ({
            ...axis,
            axisLabel: {
              ...axis.axisLabel,
              fontSize: fontSize,
            },
          }))
        : [],
      yAxis: yAxis
        ? yAxis.map((axis) => ({
            ...axis,
            axisLabel: {
              ...axis.axisLabel,
              fontSize: fontSize,
            },
          }))
        : [],
      grid: grid ? grid : [],
      series: updatedSeries, // Use the updated series with dynamic colors
    });
  }, [grid, titles, xAxis, yAxis, series, fontSize, color]);

  return (
    <div id="main" style={{ height: "100%" }}>
      {/* <ReactECharts option={options} style={{ height: "400px" }} /> */}
      {grid.length === options.grid.length ? (
        <ReactECharts
          echarts={echarts}
          option={options}
          style={{ height: "100%" }}
          opts={{ renderer: "canvas" }}
        />
      ) : null}
    </div>
  );
};

export default ChartComponent;
